"use strict";angular.module("timescheduleApp",["ngCookies","ngResource","ngSanitize","ui.bootstrap","ngRoute","ngTable","ui.bootstrap.datetimepicker","autocomplete","ngAutocomplete","btford.socket-io"]).config(["$routeProvider","$locationProvider","$httpProvider",function(a,b,c){a.otherwise({redirectTo:"/"}),b.html5Mode(!0),c.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$routeChangeStart",function(a,d){d.authenticate&&!c.isLoggedIn()&&b.path("/login")})}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/login",{templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).when("/signup",{templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).when("/settings",{templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("timescheduleApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("timescheduleApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."}).catch(function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}}]),angular.module("timescheduleApp").controller("SignupCtrl",["$scope","Auth","$location",function(a,b,c){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})}}]),angular.module("timescheduleApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){b.get("/api/users").success(function(b){a.users=b}),a.delete=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/admin",{templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("timescheduleApp").controller("MainCtrl",["$scope","$http","socket",function(a,b,c){a.awesomeThings=[],b.get("/api/projects").success(function(b){a.awesomeThings=b,c.syncUpdates("project",a.awesomeThings)}),a.addThing=function(){""!==a.newThing&&(b.post("/api/projects",{name:a.newThing}),a.newThing="")},a.deleteThing=function(a){b.delete("/api/projects/"+a._id)},a.$on("$destroy",function(){c.unsyncUpdates("project")})}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/",{templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("timescheduleApp").controller("NoteCtrl",["$scope","$http",function(a,b){a.message="Hello",a.projects=[],b({method:"GET",url:"/api/projects"}).success(function(b){for(var c=0;c<b.length;c++)a.projects.push(b[c].name)}),a.addNote=function(){console.log(a.note),b({method:"POST",url:"/api/notes",data:a.note})}}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/note",{templateUrl:"app/note/note.html",controller:"NoteCtrl"})}]),angular.module("timescheduleApp").controller("ProjectCtrl",["$scope","$http",function(a,b){b({method:"GET",url:"/api/projects"}).success(function(b){a.projects=b})}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/project",{templateUrl:"app/project/project.html",controller:"ProjectCtrl"})}]),angular.module("timescheduleApp").controller("TimetableCtrl",["$scope","$http","socket","Taskservice",function(a,b,c,d){a.projects=[],b({method:"GET",url:"/api/projects"}).success(function(b){for(var c=0;c<b.length;c++)a.projects.push(b[c].name)});a.tasknote="input",a.newtask="",a.moretask=[],b.get("/api/taskss").success(function(b){a.moretask=b,c.syncUpdates("tasks",a.moretask)}),a.startTask=function(a){var c=b.get("/api/taskss/"+a._id);c.start_time=Date.now(),b.put("/api/taskss/"+a._id,c)},a.endTask=function(a){var c=b.get("/api/taskss/"+a._id);c.end_time=Date.now(),b.put("/api/taskss/"+a._id,c)},a.timediff=function(b){a.task_retrieve=b,console.log(a.task_retrieve);var c=a.task_retrieve.start_time,e=a.task_retrieve.end_time;console.log(e),console.log(c);var f=moment.utc(moment(e,"DD/MM/YYYY HH:mm:ss").diff(moment(c,"DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");a.task_retrieve.actual_hours=f,d.update({id:b._id},a.task_retrieve,function(){},function(a){console.log("error updating:",a)})},a.note=function(a,c){c.note=a,console.log(c),b.put("/api/taskss/"+c._id,c)},a.addTask=function(){""!==a.newtask&&(b({method:"POST",url:"/api/taskss",data:a.newtask}),a.newtask="")},a.deleteTask=function(a){b.delete("/api/taskss/"+a._id)},a.$on("$destroy",function(){c.unsyncUpdates("tasks")})}]),angular.module("timescheduleApp").config(["$routeProvider",function(a){a.when("/timetable",{templateUrl:"app/timetable/timetable.html",controller:"TimetableCtrl"})}]),angular.module("timescheduleApp").service("Taskservice",["$resource",function(a){return a("api/taskss/:id",{id:"@_id"},{query:{method:"GET",isArray:!0,cache:!1},"delete":{method:"DELETE",params:{id:"@id"},cache:!1},update:{method:"PUT",params:{id:"@id"},cache:!1},add:{method:"POST",cache:!1}})}]),angular.module("timescheduleApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("timescheduleApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),angular.module("timescheduleApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("timescheduleApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Home",link:"/"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("timescheduleApp").factory("socket",["socketFactory",function(a){var b,c=5e3;clearInterval(b);var d=io.connect("",{"force new connection":!0,"max reconnection attempts":1/0,"reconnection limit":1e4});b=setInterval(function(){d.socket.connected||d.socket.connecting||d.socket.reconnecting||d.connect()},c);var e=a({ioSocket:d});return{socket:e,syncUpdates:function(a,b,c){c=c||angular.noop,e.on(a+":save",function(a){var d=_.find(b,{_id:a._id}),e=b.indexOf(d),f="created";d?(b.splice(e,1,a),f="updated"):b.push(a),c(f,a,b)}),e.on(a+":remove",function(a){var d="deleted";_.remove(b,{_id:a._id}),c(d,a,b)})},unsyncUpdates:function(a){e.removeAllListeners(a+":save"),e.removeAllListeners(a+":remove")}}}]),angular.module("timescheduleApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p><p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input name=email class=form-control ng-model=user.email></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button> <a class="btn btn-default btn-lg btn-register" href=/signup>Register</a></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-register" href=/login>Login</a></div></form></div></div></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>\'Allo, \'Allo!</h1><p class=lead>Kick-start your next web app with Angular Fullstack</p><img src=assets/images/d535427a.yeoman.png alt="I\'m Yeoman"></div></header><div class=container><div class=row><div class=col-lg-12><h1 class=page-header>Project:</h1><ul class="nav nav-tabs nav-stacked col-lg-6" ng-repeat="thing in awesomeThings"><li><a href=# tooltip={{thing.info}}>{{thing.name}}<button type=button class=close ng-click=deleteThing(thing)>&times;</button></a></li></ul></div></div><form class=thing-form><label>Project To be Completed</label><p class=input-group><input class=form-control placeholder="Add new Project" ng-model=newThing> <span class=input-group-btn><button type=submit class="btn btn-primary" ng-click=addThing()>Add New</button></span></p></form></div><footer class=footer><div class=container><p><a href=https://twitter.com/tyhenkel>@tyhenkel</a> | <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a></p></div></footer>'),a.put("app/note/note.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><form class=form-horizontal role=form><div class=form-group><label class="col-sm-3 control-label">Date</label><div class=col-sm-6><input class=form-control id=datetimepicker2 ng-model=note.date_start></div></div><div class=form-group><label class="col-sm-3 control-label">Date</label><div class=col-sm-6><input class=form-control id=datetimepicker3 ng-model=note.date_end></div></div><div class=form-group><label class="col-sm-3 control-label">Name</label><div class=col-sm-9><input class=form-control ng-model="note.name"></div></div><div class=form-group><label class="col-sm-3 control-label">Project</label><div class=col-sm-9><input ng-model=note.project typeahead="project for project in projects | filter:$viewValue | limitTo:8" class=form-control></div></div><div class=form-group><label class="col-sm-3 control-label">Diary</label><div class=col-sm-9><textarea class=form-control name=description rows=10 ng-model=note.content required></textarea></div></div><div class=form-group><div class="col-sm-offset-3 col-sm-10"><button type=submit class="btn btn-primary" ng-click=addNote()>Add</button></div></div></form><script>var d = new Date();\n$(\'#datetimepicker2\').datetimepicker({\n\n});\n$(\'#datetimepicker3\').datetimepicker({\n\n});</script></div>'),a.put("app/project/project.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=col-md-12><div ng-repeat="project in projects">{{project.name}}</div></div>'),a.put("app/timetable/timetable.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container-fluid><table class="table table-bordered" ng-repeat="tasks in moretask"><tr><th>Date</th><th>Task Name</th><th>Planned Hours</th><th>Start</th><th>End</th><th>Project</th><th>Note</th><th>Actually Hours</th><th>Delete</th></tr><td>{{tasks.planned_date | date:\'dd-MM-yyyy HH:mm:ss\'}}</td><td>{{tasks.name}}</td><td>{{tasks.planned_hours}}</td><td ng-show="tasks.start_time === null"><button type=button class="btn btn-danger" ng-click=startTask(tasks)>Start</button></td><td ng-show="tasks.start_time !== null">{{tasks.start_time | date: \'medium\'}}</td><td ng-show="tasks.end_time === null"><button type=button class="btn btn-success" ng-click=endTask(tasks)>End</button></td><td ng-show="tasks.end_time !== null">{{tasks.end_time | date : \'medium\'}}</td><!--  <td ng-show="tasks.end_time !== null">\n              <button type="button" class="btn btn-success" ng-click ="timediff(tasks.start_time,tasks.end_time)">End</button>\n        </td> --><td>{{tasks.project}}</td><td ng-show="tasks.note === null"><textarea ng-model=newtask.note></textarea><button type=button class="btn btn-primary" ng-click=note(newtask.note,tasks)>Note</button></td><td ng-show="tasks.note !== null">{{tasks.note}}</td><td ng-show="tasks.actual_hours === \'0\' && tasks.end_time !== null"><button type=button class="btn btn-primary" ng-click=timediff(tasks)>Calculate</button></td><td ng-show="tasks.actual_hours !== \'0\'">{{tasks.actual_hours}}</td><td ng-show="tasks.actual_hours === \'0\'">Not End Yet</td><td><button type=button class="btn btn-danger" ng-click=deleteTask(tasks)>Delete</button></td></table><table class="table table-bordered"><tr><td colspan=7><div class="col-xs-6 col-sm-3"><input class=form-control id=datetimepicker2 ng-model=newtask.planned_date required><!-- <div class=\'input-group date\' id=\'datetimepicker7\'>\n                        <input type="text" class="form-control" ng-model="newtask.planned_date" />\n                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span>\n                        </span> --></div></td></tr></table></div><tr><th>Task Name</th><th>Planned Hours</th><!-- <th>Start</th>\n                <th>End</th> --><th>Project</th><!-- <th>Note</th> --><th>Add</th></tr><tr><td><input ng-model="newtask.name"></td><td><input type=number ng-model="newtask.planned_hours"><!-- <td>\n                        Blank\n                    </td>\n                    <td>\n                        Blank\n                    </td> --></td><td><!-- <autocomplete ng-model="newtask.project" data="projects" on-type="searchProject"></autocomplete> --><input ng-model=newtask.project typeahead="project for project in projects | filter:$viewValue | limitTo:8" class=form-control><!-- <div class="form-group move-down">\n                            <label for="Autocomplete">Generic Autocomplete</label>\n                            <input type="text" id="Autocomplete" class="form-control" ng-autocomplete="result1" details="details1" options="options1" ng-model="newtask.project"/>\n                        </div> --></td><!-- \n                    <td>\n                        <input type="text" ng-model="newtask.project" />\n                    </td> --><!-- <td>Blank</td> --><td><button type=button class="btn btn-primary" ng-click=addTask()>Add</button></td></tr><script>var d = new Date();\n$(\'#datetimepicker2\').datetimepicker({\n\n});</script>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>timeschedule</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li><a href=/timetable>Schedule</a></li><li><a href=/note>Note</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>')}]);